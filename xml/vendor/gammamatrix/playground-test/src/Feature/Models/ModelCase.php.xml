<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ModelCase.php" path="/vendor/gammamatrix/playground-test/src/Feature/Models">
    <totals>
      <lines total="556" comments="212" code="344" executable="196" executed="0" percent="0.00"/>
      <methods count="9" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Playground\Test\Feature\Models\ModelCase" start="22" executable="196" executed="0" crap="3782">
      <namespace name="Playground\Test\Feature\Models"/>
      <method name="getModel" signature="getModel(): Illuminate\Database\Eloquent\Model" start="83" end="88" crap="2" executable="2" executed="0" coverage="0"/>
      <method name="getModelClass" signature="getModelClass(): string" start="95" end="98" crap="2" executable="1" executed="0" coverage="0"/>
      <method name="test_model_instance" signature="test_model_instance(): void" start="106" end="121" crap="2" executable="3" executed="0" coverage="0"/>
      <method name="verifyRelationship" signature="verifyRelationship(string $relationshipType, string $accessor): bool" start="132" end="243" crap="272" executable="40" executed="0" coverage="0"/>
      <method name="verifyRelationships" signature="verifyRelationships(): array" start="250" end="295" crap="42" executable="21" executed="0" coverage="0"/>
      <method name="verifyRelationshipHasOne" signature="verifyRelationshipHasOne(Illuminate\Database\Eloquent\Model $model, string $accessor): void" start="300" end="416" crap="342" executable="69" executed="0" coverage="0"/>
      <method name="verifyRelationshipHasMany" signature="verifyRelationshipHasMany(Illuminate\Database\Eloquent\Model $model, string $accessor): void" start="421" end="514" crap="240" executable="51" executed="0" coverage="0"/>
      <method name="test_verify_model_relationships" signature="test_verify_model_relationships(): void" start="525" end="539" crap="2" executable="2" executed="0" coverage="0"/>
      <method name="test_factory_create" signature="test_factory_create(): void" start="541" end="554" crap="6" executable="7" executed="0" coverage="0"/>
    </class>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Playground</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Test\Feature\Models</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Factories\HasFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Model</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Relations\BelongsTo</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Relations\BelongsToMany</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Relations\HasMany</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Database\Eloquent\Relations\HasOne</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Foundation\Testing\DatabaseTransactions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Support\Facades\Log</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Test\OrchestraTestCase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT"> * \Playground\Test\Feature\Models\ModelCase</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT"> * NOTE Set the model: protected string $modelClass = Model::class;</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="22">
        <token name="T_ABSTRACT">abstract</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ModelCase</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrchestraTestCase</token>
      </line>
      <line no="23">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">    </token>
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DatabaseTransactions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25"/>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @var bool A model must be marked as not having relationships.</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * @see testVerifyRelationships()</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasRelationships</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, array&lt;string, mixed&gt;&gt; Test belongsTo relationships.</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$belongsTo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// 'tag' =&gt; ['use' =&gt; 'type', 'rule' =&gt; '_first', 'modelClass' =&gt; \App\Models\Tag::class],</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39"/>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, array&lt;string, mixed&gt;&gt; Test belongsToMany relationships.</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$belongsToMany</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// 'tags' =&gt; ['use' =&gt; 'factory', 'rule' =&gt; '_first', 'modelClass' =&gt; \App\Models\Tag::class],</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, array&lt;string, mixed&gt;&gt; Test hasMany relationships.</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasMany</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// 'tags' =&gt; ['key' =&gt; 'coupon_id', 'modelClass' =&gt; \App\Models\Tag::class],</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53"/>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="55">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, array&lt;string, mixed&gt;&gt; Test hasOne relationships.</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasOne</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// 'tag' =&gt; ['key' =&gt; 'coupon_id', 'rule' =&gt; 'create', 'modelClass' =&gt; \App\Models\Tag::class],</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @var class-string&lt;Model&gt;</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Model</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65"/>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * @var array&lt;string, mixed&gt; The relationship types for testing.</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$relationshipTypes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsTo'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsToMany'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasMany'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasOne'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * @var bool Verify the relationship model has the expected models.</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @see testVerifyRelationships()</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$verifyRelationshipModel</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getModel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Model</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="86"/>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="89"/>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     * Get the model class.</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     * @return class-string&lt;Model&gt;</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">modelClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99"/>
      <line no="100">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//###########################################################################</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Verify: instance</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//###########################################################################</token>
      </line>
      <line no="105"/>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">test_model_instance</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;modelClass' =&gt; $this-&gt;modelClass,</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$instance' =&gt; $instance,</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$modelClass' =&gt; $modelClass,</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="119"/>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//###########################################################################</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Verify: relationships</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//###########################################################################</token>
      </line>
      <line no="128"/>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     * Verify a model relationship.</token>
      </line>
      <line no="131">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verifyRelationship</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hasRelationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">relationshipTypes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'class' =&gt; get_called_class(),</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;modelClass' =&gt; $this-&gt;modelClass,</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$hasRelationshipType' =&gt; $hasRelationshipType,</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="146"/>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$modelClass' =&gt; $this-&gt;getModelClass(),</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$model' =&gt; $this-&gt;getModel(),</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$relationshipType' =&gt; $relationshipType,</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$accessor' =&gt; $accessor,</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$hasRelationshipType' =&gt; $hasRelationshipType,</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'belongsTo' =&gt; $this-&gt;belongsTo,</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'belongsToMany' =&gt; $this-&gt;belongsToMany,</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'relationshipTypes' =&gt; $this-&gt;relationshipTypes,</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'hasMany' =&gt; $this-&gt;hasMany,</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'hasOne' =&gt; $this-&gt;hasOne,</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="162"/>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasRelationshipType</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Invalid relationship: %1$s'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$modelClass'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$relationshipType'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$accessor'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$error</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170"/>
      <line no="171">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Unable to continue testing.</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="174"/>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="176">
        <token name="T_DOC_COMMENT">         * @var class-string&lt;BelongsTo|BelongsToMany|HasMany|HasOne&gt;</token>
      </line>
      <line no="177">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$relationshipTypeClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsTo'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$relationshipTypeClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BelongsTo</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsToMany'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$relationshipTypeClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BelongsToMany</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasMany'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$relationshipTypeClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HasMany</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasOne'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$relationshipTypeClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HasOne</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="188"/>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$relationship</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipTypeClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$relationship</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191"/>
      <line no="192">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193"/>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">HasFactory</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">class_uses_recursive</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'factory'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="198">
        <token name="T_DOC_COMMENT">             * @var Model $model</token>
      </line>
      <line no="199">
        <token name="T_DOC_COMMENT">             */</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">factory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">Log</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">error</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the model to implement HasFactory'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$modelClass'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205"/>
      <line no="206">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="208"/>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationshipModel</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// All done.</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="213"/>
      <line no="214">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dd([</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$modelClass' =&gt; $this-&gt;getModelClass(),</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$model' =&gt; $this-&gt;getModel(),</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$relationship' =&gt; get_class($relationship),</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$relationship' =&gt; $relationship,</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$relationship' =&gt; get_class_methods($relationship),</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$relationshipType' =&gt; $relationshipType,</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$relationshipTypeClass' =&gt; $relationshipTypeClass,</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$accessor' =&gt; $accessor,</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$hasRelationshipType' =&gt; $hasRelationshipType,</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'belongsTo' =&gt; $this-&gt;belongsTo,</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'relationshipTypes' =&gt; $this-&gt;relationshipTypes,</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'belongsToMany' =&gt; $this-&gt;belongsToMany,</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'relationshipTypes' =&gt; $this-&gt;relationshipTypes,</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'hasMany' =&gt; $this-&gt;hasMany,</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsTo'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsToMany'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasMany'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationshipHasMany</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$relationshipType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasOne'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationshipHasOne</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="241"/>
      <line no="242">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="244"/>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="246">
        <token name="T_DOC_COMMENT">     * Verify a model relationship.</token>
      </line>
      <line no="247">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="248">
        <token name="T_DOC_COMMENT">     * @return array&lt;string, mixed&gt; Returns an array of boolean results for the relationship types.</token>
      </line>
      <line no="249">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verifyRelationships</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsTo'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsToMany'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasMany'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasOne'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'class' =&gt; get_called_class(),</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;modelClass' =&gt; $this-&gt;modelClass,</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;hasOne' =&gt; $this-&gt;hasOne,</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$this' =&gt; $this,</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="267"/>
      <line no="268">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasRelationships</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// At least one test must be completed.</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">belongsTo</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting belongsTo to be empty.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">belongsToMany</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting belongsToMany to be empty.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting hasMany to be empty.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting hasOne to be empty.'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="274"/>
      <line no="275">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="277"/>
      <line no="278">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">belongsTo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$meta</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="279">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsTo'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationship</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsTo'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="280">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="281"/>
      <line no="282">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">belongsToMany</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$meta</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="283">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsToMany'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationship</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'belongsToMany'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="284">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="285"/>
      <line no="286">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$meta</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="287">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasMany'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationship</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasMany'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="288">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="289"/>
      <line no="290">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$meta</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasOne'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationship</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'hasOne'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="293"/>
      <line no="294">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="295">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="296"/>
      <line no="297">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="298">
        <token name="T_DOC_COMMENT">     * Verify a HasOne model relationship.</token>
      </line>
      <line no="299">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verifyRelationshipHasOne</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Model</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="301">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="302">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hasAccessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="306">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &amp;&amp; isset($this-&gt;hasOne[$accessor]['use'])</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &amp;&amp; is_string($this-&gt;hasOne[$accessor]['use'])</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hasModelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasAccessor</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">class_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="315"/>
      <line no="316">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hasModelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the HasOne accessor [%1$s] to have a {use, key, modelClass} in %2$s::$hasOne[%1$s][modelClass]'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="319">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="320">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="321"/>
      <line no="322">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rule</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rule'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rule'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rule'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">            </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'rule'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;hasOne' =&gt; $this-&gt;hasOne,</token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$accessor' =&gt; $accessor,</token>
      </line>
      <line no="332">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$rule' =&gt; $rule,</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="334"/>
      <line no="335">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="336">
        <token name="T_DOC_COMMENT">         * @var string $key</token>
      </line>
      <line no="337">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="338">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasAccessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="339"/>
      <line no="340">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="341">
        <token name="T_DOC_COMMENT">         * @var class-string&lt;Model&gt; $modelClass</token>
      </line>
      <line no="342">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="343">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasOne</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="344"/>
      <line no="345">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="346"/>
      <line no="347">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$rule</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'first'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="348">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="349">
        <token name="T_DOC_COMMENT">             * @var Model $m</token>
      </line>
      <line no="350">
        <token name="T_DOC_COMMENT">             */</token>
      </line>
      <line no="351">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="352">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'factory'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="353">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="354">
        <token name="T_DOC_COMMENT">             * @var Model $m</token>
      </line>
      <line no="355">
        <token name="T_DOC_COMMENT">             */</token>
      </line>
      <line no="356">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">factory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="357">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="358"/>
      <line no="359">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="360">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="361">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="362">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="363">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$key' =&gt; $key,</token>
      </line>
      <line no="364">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$modelClass' =&gt; $modelClass,</token>
      </line>
      <line no="365">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$m' =&gt; $m?-&gt;toArray(),</token>
      </line>
      <line no="366">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="367">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="368">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the created HasOne model for the accessor [%1$s] to be an instance of %2$s - found: %3$s - %4$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="369">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="370">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="371">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gettype</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="372">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="373">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="374"/>
      <line no="375">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttribute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="376"/>
      <line no="377">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="378">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">refresh</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="379"/>
      <line no="380">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertSame</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="381">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// strval($model-&gt;getAttributeValue($key)),</token>
      </line>
      <line no="382">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="383">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="384">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// strval($m-&gt;id),</token>
      </line>
      <line no="385">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="386">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the created HasOne model for the accessor [%1$s] to have m-&gt;id === model-&gt;%2$s - modelClass: %3$s - %4$s - %5$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="387">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="388">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="389">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="390">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="391">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="392">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="393">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="394"/>
      <line no="395">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">first</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="396"/>
      <line no="397">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="398">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the created HasOne model for the accessor [%1$s] to be an instance of %2$s - found: %3$s - %4$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="399">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="400">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="401">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gettype</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="402">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="403">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="404">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertSame</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="405">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="406">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="407">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="408">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the created HasOne model for the accessor [%1$s] to have m-&gt;id === o-&gt;id - modelClass: %3$s - %4$s - %5$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="409">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="410">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="411">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="412">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$o</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="413">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="414">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="415">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="416">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="417"/>
      <line no="418">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="419">
        <token name="T_DOC_COMMENT">     * Verify a HasMany model relationship.</token>
      </line>
      <line no="420">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="421">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">verifyRelationshipHasMany</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Model</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="422">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="423">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hasAccessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="424">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="425">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="426">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="427">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="428">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="429">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &amp;&amp; isset($this-&gt;hasMany[$accessor]['use'])</token>
      </line>
      <line no="430">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// &amp;&amp; is_string($this-&gt;hasMany[$accessor]['use'])</token>
      </line>
      <line no="431">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hasModelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasAccessor</token>
      </line>
      <line no="432">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ISSET">isset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="433">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="434">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="435"/>
      <line no="436">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="437">
        <token name="T_DOC_COMMENT">         * @var class-string&lt;Model&gt; $modelClass</token>
      </line>
      <line no="438">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="439">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasModelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'modelClass'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="440"/>
      <line no="441">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hasModelClassExists</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasModelClass</token>
      </line>
      <line no="442">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">class_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="443"/>
      <line no="444">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertTrue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hasModelClassExists</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="445">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the HasMany accessor [%1$s] to have {key, modelClass} in %2$s::$hasMany[%1$s] - %3$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="446">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="447">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hasModelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'misconfigured'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="448">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="449">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="450"/>
      <line no="451">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="452"/>
      <line no="453">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="454">
        <token name="T_DOC_COMMENT">         * @var string $key</token>
      </line>
      <line no="455">
        <token name="T_DOC_COMMENT">         */</token>
      </line>
      <line no="456">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hasAccessor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasMany</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'key'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="457"/>
      <line no="458">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'factory'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="459">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// Create 3 models.</token>
      </line>
      <line no="460">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">factory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="461">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="462">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="463"/>
      <line no="464">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">factory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="465">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="466">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="467"/>
      <line no="468">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">factory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="469">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="470">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="471">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="472"/>
      <line no="473">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">get</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="474">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="475">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the created HasMany model for the accessor [%1$s] to be an instance of %2$s - found: %3$s - %4$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="476">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="477">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="478">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="479">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="480">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="481">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertSame</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="482">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="483">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAttributeValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'id'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="484">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="485">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Expecting the created HasMany model for the accessor [%1$s] to have model-&gt;id === m-&gt;%2$s - modelClass: %3$s - %4$s - %5$s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="486">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$accessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="487">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="488">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="489">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="490">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">get_called_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="491">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="492">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="493">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// dd([</token>
      </line>
      <line no="494">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="495">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="496">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="497">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//     '$m' =&gt; $m-&gt;toArray(),</token>
      </line>
      <line no="498">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="499">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="500">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dd([</token>
      </line>
      <line no="501">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="502">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="503">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="504">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$modelClass' =&gt; $this-&gt;getModelClass(),</token>
      </line>
      <line no="505">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$model class' =&gt; get_class($model),</token>
      </line>
      <line no="506">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$model' =&gt; $model-&gt;toArray(),</token>
      </line>
      <line no="507">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$models[0]' =&gt; $models[0]-&gt;toArray(),</token>
      </line>
      <line no="508">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$models[1]' =&gt; $models[1]-&gt;toArray(),</token>
      </line>
      <line no="509">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$models[2]' =&gt; $models[2]-&gt;toArray(),</token>
      </line>
      <line no="510">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$hasAccessor' =&gt; $hasAccessor,</token>
      </line>
      <line no="511">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$hasModelClass' =&gt; $hasModelClass,</token>
      </line>
      <line no="512">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'hasMany' =&gt; $this-&gt;hasMany,</token>
      </line>
      <line no="513">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="514">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="515"/>
      <line no="516">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//###########################################################################</token>
      </line>
      <line no="517">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="518">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">// Test: relationships</token>
      </line>
      <line no="519">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//</token>
      </line>
      <line no="520">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//###########################################################################</token>
      </line>
      <line no="521"/>
      <line no="522">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="523">
        <token name="T_DOC_COMMENT">     * Test the model relationships.</token>
      </line>
      <line no="524">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="525">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">test_verify_model_relationships</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="526">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="527">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="528"/>
      <line no="529">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$results</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">verifyRelationships</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="530">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// dump([</token>
      </line>
      <line no="531">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__METHOD__' =&gt; __METHOD__,</token>
      </line>
      <line no="532">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__FILE__' =&gt; __FILE__,</token>
      </line>
      <line no="533">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '__LINE__' =&gt; __LINE__,</token>
      </line>
      <line no="534">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     'class' =&gt; get_called_class(),</token>
      </line>
      <line no="535">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$this-&gt;modelClass' =&gt; $this-&gt;modelClass,</token>
      </line>
      <line no="536">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     '$results' =&gt; $results,</token>
      </line>
      <line no="537">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//     // '$this' =&gt; $this,</token>
      </line>
      <line no="538">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">// ]);</token>
      </line>
      <line no="539">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="540"/>
      <line no="541">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">test_factory_create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="542">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="543">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="544"/>
      <line no="545">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getModelClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="546">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertNotEmpty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="547"/>
      <line no="548">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_callable</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'factory'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="549">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">factory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="550">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="551"/>
      <line no="552">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertNotNull</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="553">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">assertInstanceOf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$modelClass</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$instance</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="554">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="555">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="556"/>
    </source>
  </file>
</phpunit>
