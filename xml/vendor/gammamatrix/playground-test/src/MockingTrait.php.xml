<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="MockingTrait.php" path="/vendor/gammamatrix/playground-test/src">
    <totals>
      <lines total="91" comments="41" code="50" executable="16" executed="0" percent="0.00"/>
      <methods count="3" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="0" tested="0" percent="0"/>
      <traits count="1" tested="0" percent="0.00"/>
    </totals>
    <trait name="Playground\Test\MockingTrait" start="14" executable="16" executed="0" crap="12">
      <namespace name="Playground\Test"/>
      <method name="mockRequest" signature="mockRequest(string $requestClass, string $uri, string $method, array $parameters, array $cookies, array $files, array $server, $content)" start="35" end="56" crap="2" executable="11" executed="0" coverage="0"/>
      <method name="invokeProtected" signature="invokeProtected($out, $method, array $params): mixed" start="65" end="74" crap="2" executable="3" executed="0" coverage="0"/>
      <method name="setProtected" signature="setProtected($out, string $property, mixed $value): void" start="85" end="89" crap="2" executable="2" executed="0" coverage="0"/>
    </trait>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Playground</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="5">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Playground\Test</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Illuminate\Http\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReflectionClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReflectionProperty</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="10"/>
      <line no="11">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> * \Playground\Test\MockingTrait</token>
      </line>
      <line no="13">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="14">
        <token name="T_TRAIT">trait</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MockingTrait</token>
      </line>
      <line no="15">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="16">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     * Creates a Request based on a given URI and configuration.</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     * The information contained in the URI always take precedence</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * over the other information (server and parameters).</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * @param  string  $uri  The URI</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @param  string  $method  The HTTP method</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @param  array  $parameters  The query (GET) or request (POST) parameters</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @param  array  $cookies  The request cookies ($_COOKIE)</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * @param  array  $files  The request files ($_FILES)</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @param  array  $server  The server parameters ($_SERVER)</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     * @param  string|resource|null  $content  The raw body data</token>
      </line>
      <line no="29">
        <token name="T_DOC_COMMENT">     * @return Request</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     * @see vendor/illuminate/http/Request.php</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT">     * @see vendor/laravel/lumen-framework/src/Http/Request.php</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT">     * @see vendor/symfony/http-foundation/Request.php</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mockRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$requestClass</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Request</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_CLASS">class</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$uri</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$parameters</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cookies</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$server</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$content</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$requestClass</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">createFromBase</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_NAME_FULLY_QUALIFIED">\Symfony\Component\HttpFoundation\Request</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$uri</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$parameters</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$cookies</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$server</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$content</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="57"/>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     * Invoke a protected method for testing.</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * @param object $out    The Object Under Test.</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @param string $method The protected method.</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * @param array  $params The protected method parameters.</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">invokeProtected</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rc</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReflectionClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$gm</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rc</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$gm</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">invokeArgs</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$params</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="75"/>
      <line no="76">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * Makes any properties (private/protected etc) accessible on a given object via reflection.</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @param object $out      The Object Under Test.</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     * @param string $property The protected property.</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     * @param mixed  $value    The protected property value.</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * @throws \ReflectionException</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setProtected</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG">&amp;</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$property</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">mixed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rp</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReflectionProperty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">get_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$property</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rp</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setValue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$out</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="90">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91"/>
    </source>
  </file>
</phpunit>
